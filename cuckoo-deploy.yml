--- 
- hosts: cuckoo
  become: yes
  become_user: root
  vars:
  tasks:

    - name: Set time
      shell: |
        sed -i '/\[Time\]/a NTP=lu.pool.ntp.org' /etc/systemd/timesyncd.conf
        sed -i '/\[Time\]/a FallbackNTP=li.pool.ntp.org' /etc/systemd/timesyncd.conf
        systemctl daemon-reload
        timedatectl set-ntp off
        timedatectl set-ntp on

    - name: Update cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      ignore_errors: yes

    - name: Upgrade packages
      apt: 
        upgrade: dist

    - name: Install required packages
      apt:
        name: ['git','software-properties-common','vim','curl','tree','htop','python-pip','python3-pip','python','python-dev','libffi-dev','libssl-dev','python-virtualenv','python-setuptools','libjpeg-dev','zlib1g-dev','swig','mongodb','postgresql','postgresql-contrib','libpq-dev','tcpdump','apparmor-utils','python-m2crypto','build-essential']
        state: present
      ignore_errors: yes

    - name: Tcpdump configuration
      shell: |
        groupadd pcap
        usermod -aG pcap kku
        chgrp pcap /usr/sbin/tcpdump
        setcap cap_net_raw,cap_net_admin=eip /usr/sbin/tcpdump

    - name: Install Volatility to do forensic on memory dumps
      shell: |
        cd ~
        git clone https://github.com/volatilityfoundation/volatility.git
        cd volatility
        python ./setup.py install

    - name: Install Distorm3 Powerful disassembler library for x86/AMD64
      pip:
        name: distorm3 
        state: latest   
  
    - name: Add group for virtualbox
      group: 
        name: vboxusers
        state: present

    - name: Add user for cuckoo sandbox
      user: 
        name: cuckoo
        state: present
        groups: sudo,vboxusers

    - name: Add cuckoo user to virtualbox and KVM groups 
      shell: |
        usermod -aG vboxusers cuckoo
        #usermod -aG libvirtd kaku

    - name: Upgrade setuptools and cuckoo
      pip:
        name: ['setuptools','cuckoo','pip']
        state: latest

    - name: Create cuckoo working directory
      file:
        path: /opt/cuckoo
        state: directory
        owner: cuckoo
        group: cuckoo

    - name: Set cuckoo's working directory (cwd)
      shell: cuckoo --cwd /opt/cuckoo init
      ignore_errors: yes

    - name: Download cuckoo signatures
      shell: |
        cd /opt/cuckoo
        cuckoo community

    - name: Enable mongodb
      shell: |
        sed -i '45d' /opt/cuckoo/conf/reporting.conf
        sed '/\[mongodb\]/a enabled = yes' /opt/cuckoo/conf/reporting.conf

      # prepare postgres database for Cuckoo web interface instead of SQLite DB  
    - name: Install postgres database driver for Cuckoo
      pip:
        name: psycopg2-binary
        state: latest

    - name: Create a postgres database for Cuckoo
      postgresql_db:
        name: cuckoo
        owner: postgres
        encoding: UTF-8
      become_user: postgres

    - name: Create a new user/role in postgres
      postgresql_user:
        db: cuckoo
        name: cuckoo
        password: password
        role_attr_flags: SUPERUSER
      become_user: postgres

    - name: Grant all privileges on database cuckoo TO cuckoo user
      postgresql_privs:
        db: cuckoo
        state: present
        privs: ALL
        type: database
        roles: cuckoo
        grant_option: yes
      become_user: postgres
      
    - name: Reassign all objects in database cuckoo, owned by postgres, to cuckoo user
      postgresql_owner:
        db: cuckoo
        new_owner: cuckoo
        obj_name: cuckoo
        obj_type: database
      become_user: postgres

    - name: Start the web interface
      shell: cuckoo web --host 0.0.0.0 --port 8080









    
